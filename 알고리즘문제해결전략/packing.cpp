/*
int func(int rest, int item) 

내가 생각한 알고리즘은
rest 남았을때 item을 선택했을 경우 반환하는 최대 need

책에서 정의한 알고리즘은 
rest만큼 남았을때 item 이후 물건들을 사용해서 얻을 수 있는 최대 need

어떤 차이가 있을까? 어느 방법이 옳을까?

함수 호출 방면에서는 어떤 방법이 더 좋은가? 
내 방법은 선택을 할때마다 함수를 호출하면 되지만 책의 방법은 선택을 하지 않는 경우에도 함수를 호출해야 한다.

메모이제이션 측면에서는 그럼 어떤것이 더 좋은가?
선택하는 경우, 선택하지 않는 경우를 포함해서 캐싱을 하기 때문에 이 방법이 유리하다.
그러면...? 

아 모르겠다 그냥 메모이제이션을 사용하겠다고 생각을 했으면 더 일반적인 정의로 최적 부분구조를 최대한 많이 만드는 방향으로 하자!
*/
